{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resetState","setState","homeVisible","aboutMeVisible","projectsVisible","contactVisible","switchTab","newTab","console","log","defineProperty","concat","state","react_default","a","createElement","className","App_Navbar","setVisible","App_Home","App_AboutMe","App_Projects","App_Contact","React","Component","Navbar","_this2","id","onClick","props","Home","AboutMe","Projects","Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eaeb1c19.chunk.js","sourcesContent":["import React from 'react';\n// import AnimationExample from '../src/nav.js';//\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'//\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            homeVisible: true,\n            aboutMeVisible: false,\n            projectsVisible: false,\n            contactVisible: false,\n        }\n    }\n\n    resetState = () => {\n        this.setState({\n            homeVisible: false,\n            aboutMeVisible: false,\n            projectsVisible: false,\n            contactVisible: false,\n        })\n    }\n\n    switchTab = (newTab) => {\n        console.log('testing')\n        this.resetState()\n        this.setState({\n            // [`${newTab}Visible`]: true,\n            // [`${this.state.currentTab}Visible`]: false,\n            // currentTab: newTab,\n            [`${newTab}Visible`]: true\n        })\n    }\n\n\n  render(){\n  return(\n      <div className=\"App\">\n        <div className=\"wrapper\">\n            <div>\n                <Navbar setVisible={this.switchTab}/>\n                {this.state.homeVisible ? <Home /> : null}\n                {this.state.aboutMeVisible? <AboutMe /> : null}\n                {this.state.projectsVisible ? <Projects /> : null}\n                {this.state.contactVisible ? <Contact /> : null}\n            </div>\n        </div>  \n      </div>\n  );\n}\n}\n\nclass Navbar extends React.Component{\n    render() {\n        return (\n        <div className=\"nav\">\n            <button id=\"hbutton\" onClick={() => this.props.setVisible(\"home\")}>\n                HOME\n            </button>\n            <button id=\"abutton\" onClick={() => this.props.setVisible(\"aboutMe\")}>\n                ABOUT ME\n            </button>\n            <button id=\"pbutton\" onClick={() => this.props.setVisible(\"projects\")}>\n                PROJECTS\n            </button>\n            <button id=\"cbutton\" onClick={() => this.props.setVisible(\"contact\")}>\n                CONTACT\n            </button>\n        </div>\n        );\n    }\n}\n\nclass Home extends React.Component {\n    render(){\n    return(\n        <div className=\"shade\">\n            <div className=\"displaytext\">\n                <p className=\"words\">\"I'm Kamran, A Software Developer in the making. <br></br>I am an enthusiastic and keen individual\n                who is intrigued by modern day technology\"</p>\n            </div>\n        </div>\n\n    );\n\n}\n}\n\n// class Text extends React.Component {\n//     render(){\n//         return(\n//             <div className=\"displaytext\">\n//                 <p>\"I'm Kamran, A Software Developer in the making. <br></br>I am an enthusiastic and keen individual\n//                 who is intrigued by modern day technology\"</p>\n//             </div>\n//         );\n//     }\n// }\n\nclass AboutMe extends React.Component {\n    render(){\n    return(\n      <div className=\"shadeTwo\">\n        <div className=\"aboutMeText\">\n            <p className=\"words\">\"I am an enthusiastic and keen individual who is intrigued by modern day technology. \n            A caring person who always loves to help others and give back to people. I am genuinely a hard worker who thrives upon challenges. \n            I am very focussed and pay exceptional attention to detail. \n            I enjoy working in a team and I also like to work indiviually when it is required. \n            Curently im just getting a taste of software development and im fascinated about it\".</p>\n        </div>\n      </div>\n    )\n}\n}\n\nclass Projects extends React.Component {\n    render(){\n    return(\n      <div className=\"shadeThree\">\n        <div className=\"projectsText\">\n            <p className=\"wordsThree\">Hello Projects</p>\n        </div>\n      </div>\n    )\n}\n}\n\nclass Contact extends React.Component {\n    render(){\n    return(\n      <div className=\"shadeFour\">\n        <div className=\"contacttext\">\n          <p>Name: Kamran Nawaz</p>\n          <p>Email: Kammy007@hotmail.com</p>\n          <p>Tel: 07709849829</p>\n        </div>\n\n\n        {/* <p className=\"contact-icons\"> <FontAwesomeIcon className=\"icons\" icon={faTwitter}/></p> */}\n\n    \n      </div>\n    \n    )\n}\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}